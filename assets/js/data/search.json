[ { "title": "如何在Houdini中使用OpenCL", "url": "/posts/HoutoUsingOpenCLInHoudini/", "categories": "Houdini, Script", "tags": "Houdini, OpenCL, ComputeShader", "date": "2021-05-22 21:00:00 +0800", "snippet": "前言本文中前六个案例参考OpenCL H16.5 Masterclass SideFX此视频，网页已经提供了文件，可以前去下载。后面的案例和关于workset的认识可能存在纰漏，如读者发现还请批评指正。关于OpenCL的相关参考可查阅此文章和此网站。案例一 Attribute对模型进行平均平滑因为opencl中没法用到vex中的方法，只能处理传进去的数组，因此将需要的数据作为属性保存到顶点中：vex先用传统的VEX实现该算法：vector avg = 0;foreach(int npt; i[]@neighbours){ vector pos = point(0, &quot;P&..." }, { "title": "Unreal Python 入门", "url": "/posts/how_to_use_unreal_python/", "categories": "Unreal, Script", "tags": "Unreal, Python", "date": "2021-01-25 21:00:00 +0800", "snippet": "为什么使用Unreal PythonUnreal的蓝图，作为一种可视化脚本语言，已将非常强大了。它不香吗，为什么还要使用python来做脚本呢？第一个原因正是蓝图的可视化，在项目进行中工具变得复杂后，反而不易于维护。而以文本形式的python拥有了先天的优势。第二个原因是python的易扩展性，是蓝图无法比拟。python有丰富的库，同时DCC软件普遍支持Python的API，因此python是CG行业普遍使用的管线语言。第三个原因是编译问题。虽然蓝图的编译也是非常快的(是的，蓝图也要编译一下)，但随着工程的复杂之后，蓝图启动编辑和编译也会变的越来越慢，而使用python的话，基本上不需..." } ]
