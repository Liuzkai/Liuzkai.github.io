<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://liuzkai.github.io/</id><title>Walk In Cloud</title><subtitle>I'm a tech artist in China. I work with unreal and houdini. Here I will share my mind and what I learned in work.</subtitle> <updated>2022-03-29T10:34:53+08:00</updated> <author> <name>Zhongkailiu</name> <uri>https://liuzkai.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://liuzkai.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://liuzkai.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2022 Zhongkailiu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>如何在Houdini中使用OpenCL</title><link href="https://liuzkai.github.io/posts/HoutoUsingOpenCLInHoudini/" rel="alternate" type="text/html" title="如何在Houdini中使用OpenCL" /><published>2021-05-22T21:00:00+08:00</published> <updated>2021-05-25T17:47:56+08:00</updated> <id>https://liuzkai.github.io/posts/HoutoUsingOpenCLInHoudini/</id> <content src="https://liuzkai.github.io/posts/HoutoUsingOpenCLInHoudini/" /> <author> <name>Zhongkailiu</name> </author> <category term="Houdini" /> <category term="Script" /> <summary> 前言 本文中前六个案例参考OpenCL H16.5 Masterclass SideFX此视频，网页已经提供了文件，可以前去下载。后面的案例和关于workset的认识可能存在纰漏，如读者发现还请批评指正。 关于OpenCL的相关参考可查阅此文章和此网站。 案例一 Attribute 对模型进行平均平滑 因为opencl中没法用到vex中的方法，只能处理传进去的数组，因此将需要的数据作为属性保存到顶点中： vex 先用传统的VEX实现该算法： vector avg = 0; foreach(int npt; i[]@neighbours) { vector pos = point(0, "P", npt); avg += pos; } avg /= len(i[]@neighbours); @P = avg; 使用Complie B... </summary> </entry> <entry><title>Unreal Python 入门</title><link href="https://liuzkai.github.io/posts/how_to_use_unreal_python/" rel="alternate" type="text/html" title="Unreal Python 入门" /><published>2021-01-25T21:00:00+08:00</published> <updated>2021-05-23T10:17:57+08:00</updated> <id>https://liuzkai.github.io/posts/how_to_use_unreal_python/</id> <content src="https://liuzkai.github.io/posts/how_to_use_unreal_python/" /> <author> <name>Zhongkailiu</name> </author> <category term="Unreal" /> <category term="Script" /> <summary> 为什么使用Unreal Python Unreal的蓝图，作为一种可视化脚本语言，已将非常强大了。它不香吗，为什么还要使用python来做脚本呢？ 第一个原因正是蓝图的可视化，在项目进行中工具变得复杂后，反而不易于维护。而以文本形式的python拥有了先天的优势。 第二个原因是python的易扩展性，是蓝图无法比拟。python有丰富的库，同时DCC软件普遍支持Python的API，因此python是CG行业普遍使用的管线语言。 第三个原因是编译问题。虽然蓝图的编译也是非常快的(是的，蓝图也要编译一下)，但随着工程的复杂之后，蓝图启动编辑和编译也会变的越来越慢，而使用python的话，基本上不需要编辑。在工作体验上是非常优雅和愉悦的，你使用过python之后就会不得不深陷其中。 Python与蓝图异同点 python可以调用所有蓝图可以调用的方法，但是python并不能创... </summary> </entry> </feed>
